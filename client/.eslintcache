[{"C:\\My Projects\\Task-Manager\\client\\src\\index.js":"1","C:\\My Projects\\Task-Manager\\client\\src\\components\\app.js":"2","C:\\My Projects\\Task-Manager\\client\\src\\components\\text-area.js":"3","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\welcome.js":"4","C:\\My Projects\\Task-Manager\\client\\src\\components\\nav-bar.js":"5","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\login.js":"6","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\register.js":"7","C:\\My Projects\\Task-Manager\\client\\src\\components\\list.js":"8","C:\\My Projects\\Task-Manager\\client\\src\\components\\expiryCard.js":"9","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\textarea.js":"10","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\center.js":"11","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\background.js":"12","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\image.js":"13","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\list.js":"14","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\register.js":"15","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\button.js":"16"},{"size":270,"mtime":1618824435836,"results":"17","hashOfConfig":"18"},{"size":972,"mtime":1618824435747,"results":"19","hashOfConfig":"18"},{"size":7390,"mtime":1618824435835,"results":"20","hashOfConfig":"18"},{"size":1026,"mtime":1618824435689,"results":"21","hashOfConfig":"18"},{"size":995,"mtime":1618824435749,"results":"22","hashOfConfig":"18"},{"size":2925,"mtime":1618824435688,"results":"23","hashOfConfig":"18"},{"size":3015,"mtime":1618824435689,"results":"24","hashOfConfig":"18"},{"size":1806,"mtime":1618824435749,"results":"25","hashOfConfig":"18"},{"size":1149,"mtime":1618824435748,"results":"26","hashOfConfig":"18"},{"size":510,"mtime":1618824435746,"results":"27","hashOfConfig":"18"},{"size":156,"mtime":1618824435691,"results":"28","hashOfConfig":"18"},{"size":179,"mtime":1618824435690,"results":"29","hashOfConfig":"18"},{"size":275,"mtime":1618824435743,"results":"30","hashOfConfig":"18"},{"size":214,"mtime":1618824435744,"results":"31","hashOfConfig":"18"},{"size":214,"mtime":1618824435746,"results":"32","hashOfConfig":"18"},{"size":274,"mtime":1618824435690,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1yq9ysq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\My Projects\\Task-Manager\\client\\src\\index.js",[],["74","75"],"C:\\My Projects\\Task-Manager\\client\\src\\components\\app.js",["76","77","78"],"import React, { useState } from \"react\";\r\nimport NavBar from \"./nav-bar\";\r\nimport TextArea from \"./text-area\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Register from \"../Pages/register\";\r\nimport Login from \"../Pages/login\";\r\nimport Welcome from \"../Pages/welcome\";\r\nexport const CredentialsContext = React.createContext();\r\n\r\n//app component\r\nconst App = () => {\r\n  const credentialsState = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <CredentialsContext.Provider value={credentialsState}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Welcome />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </CredentialsContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\My Projects\\Task-Manager\\client\\src\\components\\text-area.js",["79","80","81","82","83"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport NavBar from \"./nav-bar\";\r\nimport List from \"./list\";\r\nimport axios from \"axios\";\r\nimport InputField from \"../common-styling/textarea\";\r\nimport Lists from \"../common-styling/list\";\r\nimport { Divider } from \"../../node_modules/semantic-ui-react\";\r\nimport Image from \"../common-styling/image\";\r\nimport image from \"../shopping-list.svg\";\r\nimport { CredentialsContext } from \"../components/app\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport uuid from \"react-uuid\";\r\nimport Expiry from \"./expiryCard\";\r\nimport \"./styles.css\";\r\n\r\nconst TextArea = () => {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [Todo, setTodoText] = useState(\"\");\r\n  const [edit, setEditText] = useState(false);\r\n  const [editTodo, setEditTodo] = useState(\"\");\r\n  const [Index, setIndex] = useState(0);\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const url = `http://localhost:3000/getList`;\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(token);\r\n\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    if (todoList === undefined) {\r\n      setTodoList([]);\r\n    } else {\r\n      let todoList = await axios.get(url, config).then((res) => {\r\n        console.log(res.data.id);\r\n        setCredentials({ id: res.data.id });\r\n        setTodoList(res.data.Todo);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const deleteText = (Todo) => {\r\n    console.log(Todo);\r\n\r\n    todoList.map((items) => {\r\n      if (Todo === items.Todo) {\r\n        setTodoList(\r\n          todoList.filter((data) => {\r\n            return data.Todo !== Todo;\r\n          })\r\n        );\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n\r\n        axios\r\n          .post(\r\n            `http://localhost:3000/DeleteList`,\r\n            {\r\n              Key: credentials.id,\r\n              Todo: items.Todo,\r\n            },\r\n            config\r\n          )\r\n          .then(\r\n            (response) => {\r\n              console.log(response.data);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n      }\r\n    });\r\n\r\n    alert(\"Successfully Deleted\");\r\n  };\r\n\r\n  const editText = (Todo, date) => {\r\n    //For editing the text.\r\n\r\n    setTodoText(Todo);\r\n    setEditTodo(Todo);\r\n    setDate(date);\r\n    setEditText(true);\r\n\r\n    todoList.map((items) => {\r\n      if (Todo === items.Todo) {\r\n        setIndex(\r\n          todoList.findIndex((items) => {\r\n            return items.Todo === Todo;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const postTodo = (newItem) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    axios.post(`http://localhost:3000/addList`, newItem, config).then(\r\n      (response) => {\r\n        console.log(credentials.id);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const addItem = (e) => {\r\n    e.preventDefault();\r\n    //for adding new card.\r\n\r\n    console.log(date);\r\n    if (Todo === \"\" || date === \"\") {\r\n      return alert(\"Input Field Or Date Field Is Empty\");\r\n    }\r\n\r\n    if (edit === false) {\r\n      const newItem = { Todo: Todo, Key: credentials.id, Date: date };\r\n      console.log(newItem);\r\n      const newTodoList = [...todoList, newItem];\r\n      setTodoList(newTodoList);\r\n      setTodoText(\"\");\r\n      setDate(\"\");\r\n      postTodo(newItem);\r\n      return;\r\n    } else {\r\n      console.log(todoList);\r\n      const updatedItem = {\r\n        Todo: Todo,\r\n        key: credentials.id,\r\n        Date: date,\r\n      };\r\n\r\n      let todos = todoList;\r\n      todos[Index] = updatedItem;\r\n      setTodoList(todos);\r\n      setTodoText(\"\");\r\n      setDate(\"\");\r\n\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          `http://localhost:3000/updateList`,\r\n          {\r\n            Todo: Todo,\r\n            EditTodo: editTodo,\r\n          },\r\n          config\r\n        )\r\n        .then(\r\n          (response) => {\r\n            console.log(credentials.id);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    }\r\n    setEditText(false);\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"animation\">\r\n        <h3\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"75px\",\r\n            left: \"20px\",\r\n          }}\r\n          className=\"heading\"\r\n        >\r\n          Add Your Notes Here!!\r\n        </h3>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <InputField\r\n          value={Todo}\r\n          className=\"form-control\"\r\n          placeholder=\"--> Write Something... <--\"\r\n          onChange={(el) => {\r\n            setTodoText(el.target.value);\r\n          }}\r\n        ></InputField>\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          style={{\r\n            height: \"40px\",\r\n            width: \"100px\",\r\n            position: \"absolute\",\r\n            top: \"180px\",\r\n            left: \"20px\",\r\n          }}\r\n          className=\"button\"\r\n          variant=\"success\"\r\n          type=\"submit\"\r\n          onClick={addItem}\r\n        >\r\n          {edit ? `Save Note` : `Add Note`}\r\n        </Button>\r\n        <input\r\n          style={{\r\n            height: \"40px\",\r\n            width: \"200px\",\r\n            backgroundColor: \"#464a46\",\r\n            position: \"absolute\",\r\n            top: \"180px\",\r\n            left: \"130px\",\r\n            borderRadius: \"20px\",\r\n            padding: \"20px\",\r\n            borderColor: \"#9c9c9c\",\r\n          }}\r\n          onChange={(el) => {\r\n            setDate(el.target.value);\r\n          }}\r\n          type=\"datetime-local\"\r\n        />\r\n      </div>\r\n\r\n      <Lists>\r\n        {todoList.map((items) => {\r\n          console.log(items);\r\n          let d1 = new Date(items.Date);\r\n          console.log(d1);\r\n          let d2 = new Date();\r\n          console.log(d2);\r\n\r\n          if (d2 >= d1 && d2.getTime() >= d1.getTime()) {\r\n            return (\r\n              <Expiry\r\n                items={items}\r\n                editText={editText}\r\n                deleteText={deleteText}\r\n              />\r\n            );\r\n          }\r\n          return (\r\n            <List\r\n              key={uuid()}\r\n              className=\"noteCard mx-4 my-4 \"\r\n              style={{ width: \"700px\", backgroundColor: \"#3d3e40\" }}\r\n              items={items}\r\n              editText={editText}\r\n              deleteText={deleteText}\r\n            />\r\n          );\r\n        })}\r\n      </Lists>\r\n\r\n      <Divider\r\n        vertical\r\n        style={{\r\n          color: \"grey\",\r\n          position: \"absolute\",\r\n          height: \"290px\",\r\n          left: \"450px\",\r\n          top: \"55%\",\r\n          bottom: \"40%\",\r\n        }}\r\n      >\r\n        <Image\r\n          src={image}\r\n          style={{\r\n            height: \"40px\",\r\n            position: \"relative\",\r\n            left: \"1px\",\r\n            top: \"-20px\",\r\n          }}\r\n        />\r\n      </Divider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\welcome.js",["84","85"],"import react, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Center from \"../common-styling/center\";\r\nimport { CredentialsContext } from \"../components/app\";\r\nimport TextArea from \"../components/text-area\";\r\n\r\nexport default function Welcome() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  console.log(credentials);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  return (\r\n    <div>\r\n      <Center>\r\n        {token === null && <h1> Welcome</h1>}\r\n        {token === null && (\r\n          <Link\r\n            to=\"/register\"\r\n            style={{ position: \"absolute\", right: \"35px\", top: \"60px\" }}\r\n          >\r\n            Register\r\n          </Link>\r\n        )}\r\n        <br />\r\n        {token === null && (\r\n          <Link\r\n            to=\"/login\"\r\n            style={{ position: \"absolute\", right: \"45px\", top: \"90px\" }}\r\n          >\r\n            Login\r\n          </Link>\r\n        )}\r\n      </Center>\r\n      {token && <TextArea />}\r\n    </div>\r\n  );\r\n}\r\n","C:\\My Projects\\Task-Manager\\client\\src\\components\\nav-bar.js",["86"],"import { React, useContext } from \"react\";\r\nimport Background from \"../common-styling/background\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CredentialsContext } from \"../components/app\";\r\n\r\nconst NavBar = () => {\r\n  const [, setCredentials] = useContext(CredentialsContext);\r\n  const logout = () => {\r\n    setCredentials(null);\r\n    localStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark \"\r\n      style={{ backgroundColor: \"#403f3d\", height: \"50px\" }}\r\n    >\r\n      <h1\r\n        className=\"navbar-brand \"\r\n        style={{ position: \"absolute\", top: \"12px\" }}\r\n      >\r\n        Task Manager\r\n      </h1>\r\n      <Button\r\n        variant=\"danger\"\r\n        type=\"submit\"\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"30px\",\r\n          height: \"30px\",\r\n          color: \"white\",\r\n        }}\r\n        onClick={logout}\r\n      >\r\n        Log Out\r\n      </Button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\login.js",["87","88","89"],"import React, { useContext, useState } from \"react\";\r\nimport Registration from \"../common-styling/register\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../Pages/styles.css\";\r\nimport { CredentialsContext } from \"../components/app\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./styles.css\";\r\n\r\nconst Login = () => {\r\n  const [Email, setUsername] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const history = useHistory();\r\n\r\n  const Login = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Email === \"\" || Password === \"\") {\r\n      alert(\"Username Or Password Field Cannot Be Empty\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(`http://localhost:3000/logIn`, { Email, Password })\r\n      .then((response) => {\r\n        // if (!response) {\r\n        //   alert(\"wtf\");\r\n        //   return;\r\n        //   // const { message } = await response.json();\r\n        //   // throw Error(message);\r\n        // }\r\n\r\n        console.log(response);\r\n\r\n        localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n        localStorage.setItem(\"id\", JSON.stringify(response.data.id));\r\n        setCredentials({\r\n          token: response.data.token,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"username or password invalid\");\r\n        console.log(error);\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"welcome\">\r\n        <h1>Welcome To Login Page</h1>\r\n      </div>\r\n      <div className=\"title\">\r\n        <h3>Login</h3>\r\n      </div>\r\n\r\n      <Form onSubmit={Login}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label\r\n            style={{ color: \"#8f8989\", fontFamily: \"Arial, sans-serif\" }}\r\n          >\r\n            {\" \"}\r\n            Email Address\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(el) => setUsername(el.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label\r\n            style={{ color: \"#8f8989\", fontFamily: \"Arial, sans-serif\" }}\r\n          >\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(el) => setPassword(el.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\My Projects\\Task-Manager\\client\\src\\Pages\\register.js",["90","91"],"import React, { useContext, useState } from \"react\";\r\nimport Registration from \"../common-styling/register\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CredentialsContext } from \"../components/app\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./styles.css\";\r\n\r\nconst Register = () => {\r\n  const [Email, setUsername] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [, setCredentials] = useContext(CredentialsContext);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    if (Email === \"\" && Password === \"\") {\r\n      alert(\"Email Or Password Field Cannot Be Empty!!  \");\r\n      return;\r\n    }\r\n    axios\r\n      .post(`http://localhost:3000/signUp`, {\r\n        Email: Email,\r\n        Password: Password,\r\n      })\r\n      .then((response) => {\r\n        alert(\"You are successfully registered\");\r\n\r\n        localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n        localStorage.setItem(\"id\", JSON.stringify(response.data.id));\r\n\r\n        setCredentials({\r\n          token: response.data.token,\r\n          id: response.data.id,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"welcome\">\r\n        <h1>Welcome To SignUp Page</h1>\r\n      </div>\r\n      <div className=\"title\">\r\n        <h3>Register</h3>\r\n      </div>\r\n      <Form onSubmit={register}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label\r\n            style={{ color: \"#8f8989\", fontFamily: \"Arial, sans-serif\" }}\r\n          >\r\n            {\" \"}\r\n            Email Address\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(el) => setUsername(el.target.value)}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label\r\n            style={{ color: \"#8f8989\", fontFamily: \"Arial, sans-serif\" }}\r\n          >\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(el) => setPassword(el.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n{\r\n  /* <form onSubmit={register}>\r\n<input\r\n  placeholder=\"Email\"\r\n  name=\"Email\"\r\n  onChange={(el) => setUsername(el.target.value)}\r\n/>\r\n<br />\r\n<input\r\n  type=\"password\"\r\n  placeholder=\"password\"\r\n  name=\"Password\"\r\n  onChange={(el) => setPassword(el.target.value)}\r\n/>\r\n<br />\r\n<button type=\"submit\">Register</button>\r\n</form> */\r\n}\r\n","C:\\My Projects\\Task-Manager\\client\\src\\components\\list.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\components\\expiryCard.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\textarea.js",["92"],"import styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst TextArea = styled.input`\r\n  background-color: #292827;\r\n  color: #999896;\r\n  height: 50px;\r\n  width: 50px;\r\n  position: relative;\r\n  bottom: -70px;\r\n  right: -20px;\r\n  border-color: grey;\r\n  transition: width 0.4s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #292827;\r\n    width: 400px;\r\n    border-color: grey;\r\n    color: #999896;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #292827;\r\n  }\r\n`;\r\n\r\nexport default TextArea;\r\n","C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\center.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\background.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\image.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\list.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\register.js",[],"C:\\My Projects\\Task-Manager\\client\\src\\common-styling\\button.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":4,"column":50,"nodeType":"99","messageId":"100","endLine":4,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":25,"column":13,"nodeType":"105","endLine":44,"endColumn":4},{"ruleId":"97","severity":1,"message":"106","line":38,"column":11,"nodeType":"99","messageId":"100","endLine":38,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":44,"column":6,"nodeType":"108","endLine":44,"endColumn":8,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":49,"column":26,"nodeType":"105","messageId":"112","endLine":49,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":96,"column":26,"nodeType":"105","messageId":"112","endLine":96,"endColumn":28},{"ruleId":"97","severity":1,"message":"113","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"114","line":8,"column":23,"nodeType":"99","messageId":"100","endLine":8,"endColumn":37},{"ruleId":"97","severity":1,"message":"115","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"116","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"117","line":14,"column":10,"nodeType":"99","messageId":"100","endLine":14,"endColumn":15},{"ruleId":"97","severity":1,"message":"118","line":15,"column":10,"nodeType":"99","messageId":"100","endLine":15,"endColumn":21},{"ruleId":"97","severity":1,"message":"116","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":94,"column":1,"nodeType":"121","messageId":"122","endLine":111,"endColumn":2},{"ruleId":"97","severity":1,"message":"123","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'TextArea' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'todoList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCredentials' and 'todoList'. Either include them or remove the dependency array.","ArrayExpression",["126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'react' is defined but never used.","'setCredentials' is assigned a value but never used.","'Background' is defined but never used.","'Registration' is defined but never used.","'error' is assigned a value but never used.","'credentials' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [setCredentials, todoList]",{"range":"129","text":"130"},[1502,1504],"[setCredentials, todoList]"]