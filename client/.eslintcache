[{"E:\\My Projects\\ReactApp\\task-manager\\src\\index.js":"1","E:\\My Projects\\ReactApp\\task-manager\\src\\components\\app.js":"2","E:\\My Projects\\ReactApp\\task-manager\\src\\components\\nav-bar.js":"3","E:\\My Projects\\ReactApp\\task-manager\\src\\components\\text-area.js":"4","E:\\My Projects\\ReactApp\\task-manager\\src\\components\\cards.js":"5","E:\\My Projects\\Task Manager\\client\\src\\index.js":"6","E:\\My Projects\\Task Manager\\client\\src\\components\\app.js":"7","E:\\My Projects\\Task Manager\\client\\src\\components\\nav-bar.js":"8","E:\\My Projects\\Task Manager\\client\\src\\components\\text-area.js":"9","E:\\My Projects\\Task Manager\\client\\src\\components\\cards.js":"10"},{"size":226,"mtime":1611004216889,"results":"11","hashOfConfig":"12"},{"size":475,"mtime":1611314821408,"results":"13","hashOfConfig":"12"},{"size":240,"mtime":1611306933607,"results":"14","hashOfConfig":"12"},{"size":3974,"mtime":1611589118989,"results":"15","hashOfConfig":"12"},{"size":1058,"mtime":1611518443981,"results":"16","hashOfConfig":"12"},{"size":226,"mtime":1611004216889,"results":"17","hashOfConfig":"18"},{"size":290,"mtime":1611692277088,"results":"19","hashOfConfig":"18"},{"size":240,"mtime":1611306933607,"results":"20","hashOfConfig":"18"},{"size":4681,"mtime":1611769567019,"results":"21","hashOfConfig":"18"},{"size":1058,"mtime":1611518443981,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jegj2h",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"m5zf28",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"E:\\My Projects\\ReactApp\\task-manager\\src\\index.js",[],"E:\\My Projects\\ReactApp\\task-manager\\src\\components\\app.js",[],"E:\\My Projects\\ReactApp\\task-manager\\src\\components\\nav-bar.js",[],"E:\\My Projects\\ReactApp\\task-manager\\src\\components\\text-area.js",["45","46"],"E:\\My Projects\\ReactApp\\task-manager\\src\\components\\cards.js",[],"E:\\My Projects\\Task Manager\\client\\src\\index.js",[],["47","48"],"E:\\My Projects\\Task Manager\\client\\src\\components\\app.js",[],"E:\\My Projects\\Task Manager\\client\\src\\components\\nav-bar.js",[],"E:\\My Projects\\Task Manager\\client\\src\\components\\text-area.js",["49","50"],"import React from \"react\";\r\nimport Cards from \"./cards\";\r\nimport axios from \"axios\";\r\n\r\nclass TextArea extends React.Component {\r\n  state = {\r\n    todoList: [],\r\n    text: \"\",\r\n    date: \"\",\r\n    key: Date.now(),\r\n    editText: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const api = axios.create({\r\n      baseURL: `http://localhost:3000/getList`,\r\n    });\r\n\r\n    let todoList = await api.get(`/`).then((res) => res.data);\r\n    console.log(todoList.data);\r\n    this.setState({\r\n      todoList: todoList.data,\r\n    });\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    console.log(this.state.todoList);\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  deleteText = (key) => {\r\n    let todos = this.state.todoList;\r\n    todos.map((items) => {\r\n      if (key === items.key) {\r\n        this.setState({\r\n          todoList: todos.filter((data) => {\r\n            return data.key !== key;\r\n          }),\r\n        });\r\n      }\r\n      console.log(this.state.todoList);\r\n    });\r\n    console.log(this.state.todoList);\r\n  };\r\n\r\n  editText = (key, text, date) => {\r\n    this.setState({\r\n      text: text,\r\n      date: date,\r\n      key: key,\r\n      editText: true,\r\n    });\r\n  };\r\n\r\n  addItem = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state.key);\r\n\r\n    //For editing the text.\r\n    if (this.state.editText === true) {\r\n      if (this.state.text !== \"\" && this.state.date !== \"\") {\r\n        let todos = this.state.todoList;\r\n        todos.map((items) => {\r\n          if (this.state.key === items.key) {\r\n            const updatedItem = {\r\n              text: this.state.text,\r\n              date: this.state.date,\r\n              key: this.state.key,\r\n            };\r\n            let indexOf = todos.findIndex((items) => {\r\n              return items.key === this.state.key;\r\n            });\r\n            todos[indexOf] = updatedItem;\r\n\r\n            this.setState({\r\n              todoList: todos,\r\n              editText: false,\r\n            });\r\n            this.postData();\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"Input Field Or Date Field Is Empty\");\r\n      }\r\n    } else {\r\n      //for adding new card.\r\n      if (this.state.text !== \"\" && this.state.date) {\r\n        const newItem = {\r\n          text: this.state.text,\r\n          date: this.state.date,\r\n          key: this.state.key,\r\n        };\r\n\r\n        this.setState({\r\n          todoList: [...this.state.todoList, newItem],\r\n          text: \"\",\r\n          date: \"\",\r\n          key: Date.now(),\r\n        });\r\n        console.log(this.state.todoList);\r\n\r\n        console.log(\"i worked\");\r\n      } else {\r\n        alert(\"Input Field Or Date Field Is Empty\");\r\n      }\r\n    }\r\n  };\r\n\r\n  postData = async () => {\r\n    await axios\r\n      .post(`http://localhost:3000/addList`, {\r\n        todoList: this.state.todoList,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contaner my-4\">\r\n        <h1 className=\"headText mx-3\">Welcome To Task Manager</h1>\r\n        <div className=\"cardContainer\" id=\"addCard\">\r\n          <div className=\"card-body my-4\">\r\n            <h5 className=\"card-title \">Add a note</h5>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.handleInput}\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary my-2\"\r\n              type=\"submit\"\r\n              onClick={this.addItem}\r\n            >\r\n              {this.state.editText ? `Save Note` : `Add Note`}\r\n            </button>\r\n            <input\r\n              className=\"dateTime mx-2\"\r\n              name=\"date\"\r\n              type=\"datetime-local\"\r\n              id=\"myDate\"\r\n              value={this.state.date}\r\n              onChange={this.handleInput}\r\n            ></input>\r\n            <button\r\n              className=\"btn btn-primary my-30\"\r\n              type=\"submit\"\r\n              onClick={this.addItem}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <h1 className=\"cardArea mx-4\">Your Notes</h1>\r\n        <hr />\r\n        {this.state.todoList.map((items) => {\r\n          console.log(items);\r\n          this.postData();\r\n          return (\r\n            <Cards name={items} delete={this.deleteText} edit={this.editText} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","E:\\My Projects\\Task Manager\\client\\src\\components\\cards.js",[],{"ruleId":"51","severity":1,"message":"52","line":21,"column":23,"nodeType":"53","messageId":"54","endLine":21,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":48,"column":27,"nodeType":"53","messageId":"54","endLine":48,"endColumn":29},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"52","line":35,"column":23,"nodeType":"53","messageId":"54","endLine":35,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":65,"column":27,"nodeType":"53","messageId":"54","endLine":65,"endColumn":29},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-global-assign","no-unsafe-negation"]